/*
 * mpu9250.h
 *
 *  Created on: 22 sep. 2022
 *      Author: Santiago
 */

#ifndef DEV_INC_MPU9250_H_
#define DEV_INC_MPU9250_H_

#include "types.h"

#define MPU9250_SLAVEADDR 0xD0
#define MPU9250_PWR_MGMT_1 0x6B
#define MPU9250_CONFIG_AD 0x1A
#define MPU9250_GYRO_CONFIG 0x1B
#define MPU9250_ACCEL_CONFIG_1 0x1C
#define MPU9250_ACCEL_CONFIG_2 0x1D
#define MPU9250_ACCEL_XOUT_H 0x3B
#define MPU9250_ACCEL_XOUT_L 0x3C
#define MPU9250_ACCEL_YOUT_H 0x3D
#define MPU9250_ACCEL_YOUT_L 0x3E
#define MPU9250_ACCEL_ZOUT_H 0x3F
#define MPU9250_ACCEL_ZOUT_L 0x40
#define MPU9250_TEMP_OUT_H 0x41
#define MPU9250_TEMP_OUT_L 0x42
#define MPU9250_GYRO_XOUT_H 0x43
#define MPU9250_GYRO_XOUT_L 0x44
#define MPU9250_GYRO_YOUT_H 0x45
#define MPU9250_GYRO_YOUT_L 0x46
#define MPU9250_GYRO_ZOUT_H 0x47
#define MPU9250_GYRO_ZOUT_L 0x48

typedef struct{
	uint16_t x;
	uint16_t y;
	uint16_t z;
}axis_t;

typedef struct{
	axis_t gyro;
	axis_t accl;
	uint16_t temp;
}MPU9250_t;

retType APP_MPU9250Write(uint8_t addr2write, uint8_t * pdata, uint16_t size);
retType APP_MPU9250Read(uint8_t addr2read, uint8_t * pdata, uint16_t size);
retType APP_MPU9250Init(void);
retType APP_MPU9250ReadGyro(axis_t * gyro);
retType APP_MPU9250ReadAccl(axis_t * accl);
retType APP_MPU9250ReadTemp(uint16_t * temp);


#endif /* DEV_INC_MPU9250_H_ */
